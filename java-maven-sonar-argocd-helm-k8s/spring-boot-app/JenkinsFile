pipeline {
    agent any
    environment {
        SONAR_HOST_URL = 'http://34.211.226.142:9000'  // Update with your SonarQube server IP
        SONAR_AUTH_TOKEN = credentials('sonarqube') // Ensure the token is stored as a Jenkins credential
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build and Test') {
            steps {
                // Navigate to the directory containing the POM and run Maven build
                dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') { 
                    sh 'mvn clean package'
                }
            }
        }

        stage('Static Code Analysis') {
            steps {
                // Run SonarQube analysis
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {  // Ensure it's in the right folder
                        sh "mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=$SONAR_HOST_URL"
                    }
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                // Navigate to the directory containing the Dockerfile and build the image
                dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {  // Change if the Dockerfile is in a different directory
                    sh 'docker build -t abhishekf5/ultimate-cicd:4 .'
                    docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
                        docker.image('abhishekf5/ultimate-cicd:4').push()
                    }
                }
            }
        }

        stage('Update Deployment File') {
            steps {
                // Add commands to update your deployment file if needed
                echo "Update the deployment file as per your requirements"
            }
        }
    }

    post {
        always {
            cleanWs()  // Clean workspace after the pipeline execution
        }
    }
}
